package testForAll;
import java.util.List;

import cn.nju.seg.atg.BEParse.BinaryExpressionParse;

public class TestForAll {

	public static void main(String[] args)
	{
		
/*		BenchMarkForZYFWithInit.sp();
		List<String> functionName = BenchMarkForZYFWithInit.functionName;
		List<String> binaryExp = BenchMarkForZYFWithInit.binaryExp;
		List<String> paraName = BenchMarkForZYFWithInit.paraName;
		List<String> paraType = BenchMarkForZYFWithInit.paraType;
		List<String> initNum = BenchMarkForZYFWithInit.initNum;
		
		BenchMarkForZYF.sp1();
		List<String> functionName = BenchMarkForZYF.functionName;
		List<String> binaryExp = BenchMarkForZYF.binaryExp;
		List<String> paraName = BenchMarkForZYF.paraName;
		List<String> paraType = BenchMarkForZYF.paraType;
		List<String> initNum = BenchMarkForZYF.initNum;
		 
		
		for(int i=0;i<functionName.size();i++)
		{
			if(initNum.size()<=0 || initNum.size()!=binaryExp.size())
				BinaryExpressionParse.initAll(binaryExp.get(i),functionName.get(i),paraType.get(i),paraName.get(i));
			else 
				BinaryExpressionParse.initAll(binaryExp.get(i),functionName.get(i),paraType.get(i),paraName.get(i),initNum.get(i));
			BinaryExpressionParse.beginSolver();
			System.gc();
		}
		*/System.gc();
		
		BenchMark.initBenchmark();
		List<String> functionName = BenchMark.functionName;
		List<String> binaryExp = BenchMark.binaryExp;
		List<String> paraName = BenchMark.paraName;
		List<String> paraType = BenchMark.paraType;
		for(int i=0;i<functionName.size();i++)
		{
			BinaryExpressionParse.initAll(binaryExp.get(i),functionName.get(i),paraType.get(i),paraName.get(i));
			
			
		}
		
		System.out.println("***** Game Over *****");
	}

}
