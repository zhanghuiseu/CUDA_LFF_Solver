

		/*
		 * 下面是最后在CPU对求出的可行解向量做验证的函数，
		 * 主要就是计算每一个简单子约束的运行时刻值，以及每一个简单自约束的满足情况
		 * */
		RuntimeValue* ConstraintParameter::getConstraintValue_0_0(double x,double y,double z)
		{
			double value =9 - x*y*z;
			bool isCovered = (9 > x*y*z) * true;
			RuntimeValue* one = new RuntimeValue(value,isCovered);
			return one;
		}

		RuntimeValue* ConstraintParameter::getConstraintValue_0_1(double x,double y,double z)
		{
			double value = z - x*y;
			bool isCovered = (z > x*y) * true;
			RuntimeValue* one = new RuntimeValue(value,isCovered);
			return one;
		}

		RuntimeValue* ConstraintParameter::getConstraintValue_0_2(double x,double y,double z)
		{
			double value = y - z;
			bool isCovered = (y > z) * true;
			RuntimeValue* one = new RuntimeValue(value,isCovered);
			return one;
		}
