
	/*
	 * 约束的名字信息
	 * */
	static string constraintName;

	/*
	 * 约束的变量类型，使用bool变量表示，1表示浮点数，0表示整形
	 * */
	static bool constraintVarType[NUM_OF_PARAM];

	/*
	 * 变量的名字信息
	 * */
	static string constraintVarName[NUM_OF_PARAM];

	/*
	 * 变量的整体依赖关系，使用bool变量表示，1表示相关，0表示不相关
	 * */
	static bool constraintDependencyRela[NUM_OF_PARAM];

	/*
	 * 所有的约束的数量
	 * */
	static const int Num_Of_Constraints = 3;

	/*
	 * 所有的约束的比较运算符的类型信息
	 * */
	static int cinstraintCompType[Num_Of_Constraints];

	/*
	 * 这个函数是用来获取约束的信息
	 * */
	static vector< vector<string> > getConstraintInfo();
	static vector< vector<RuntimeValue*> > getCoveredInfo(double* nums);

	/*
	 * 下面是最后在CPU对求出的可行解向量做验证的函数，
	 * 主要就是计算每一个简单子约束的运行时刻值，以及每一个简单自约束的满足情况
	 * */
	static RuntimeValue* getConstraintValue_0_0(double x,double y,double z);
	static RuntimeValue* getConstraintValue_0_1(double x,double y,double z);
	static RuntimeValue* getConstraintValue_0_2(double x,double y,double z);
};

#endif /* CONSTRAINTPARAMETER_CUH_ */
