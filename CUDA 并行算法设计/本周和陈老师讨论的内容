	/*
	 *  case：0
	 *  等号和不等号 全区间
	 *  判断是否是> 和 >=比较运算符号的处理
	 *  斜率为0： abs(y1-y2)<=doubleMin && y1 >=0 && y2>=0 全区间
	 *  斜率存在： abs(y1-y2)>doubleMin && y1>=0 && y2>=0 全区间

	 *  case1: abs(y1-y2)<=doubleMin && y1 <=0 && y2<=0        无解
	 *  case2: abs(y1-y2)>doubleMin && y1>0 && y2<0 && y1>0 (x1,z)
	 *  case3: abs(y1-y2)>doubleMin && y1<0 && y2>0 && y2>0 (z,x2)
	 *  case4: abs(y1-y2)>doubleMin && z<x1 && (y1 <=0 || y1<=-0) && (y2<=0||y2<=-0) 无解(xbefore,d)
	 *  case5: abs(y1-y2)>doubleMin && z>x2 && (y1 <=0 || y1<=-0) && (y2<=0||y2<=-0) 无解(d,xafter)
	 *  下面是所有的分类的变量的设置
	 * */

上面分析的6中case可能存在重合现象，比如（1,0）,(2,0),

所以分类后的执行问题，建议先执行无解的case1,4,5，后来是有解的case0,1,2,3

部分实验结果，根据区间扩展和区间细化预测的解的数量很少，目前窗口长度是1024，
区间扩展的范围还没有设计的窗口长度的范围大，
所以在某些例子可能出现经过一轮计算过后的预测解只有几十个的样子，这样也会造成硬件资源的浪费，所以我还认为可以针对窗口作进一步的扩展，可以通过预测节点的数量动态的调整窗口的长度的扩展



